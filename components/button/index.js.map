{"version":3,"file":"index.js","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAGrD,IAAM,cAAc,GAApB,MAAM,cAAe,SAAQ,UAAU;IAAvC;;QAQL,8BAA8B;QAE9B,SAAI,GAAW,OAAO,CAAC;IAMzB,CAAC;IAJC,iDAAiD;IACxC,MAAM;QACb,OAAO,IAAI,CAAA,aAAa,IAAI,CAAC,IAAI,OAAO,CAAC;IAC3C,CAAC;;AAdD,+DAA+D;AAC/C,qBAAM,GAAG,GAAG,CAAA;;;;GAI3B,AAJqB,CAIpB;AAIF;IADC,QAAQ,EAAE;4CACY;AAVZ,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAgB1B","sourcesContent":["import { LitElement, css, html } from \"lit\";\nimport { customElement, property } from \"lit/decorators.js\";\n\n@customElement(\"simple-greeting\")\nexport class SimpleGreeting extends LitElement {\n  // Define scoped styles right with your component, in plain CSS\n  static override styles = css`\n    :host {\n      color: blue;\n    }\n  `;\n\n  // Declare reactive properties\n  @property()\n  name: string = \"World\";\n\n  // Render the UI as a function of component state\n  override render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\n"]}